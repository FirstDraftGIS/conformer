version: 2
jobs:
  build:
    docker:
      - image: python:latest
        environment:
        - PG_HOST=localhost
        - PG_USER=ubuntu
      - image: circleci/postgres:9.5-alpine-postgis
    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Update Package Lists
          command: apt-get update -qq
      - run:
          name: Install Database Dependencies
          command: apt-get install -y postgresql postgresql-contrib postgresql-server-dev-all '^postgresql-[0-9].[0-9]-postgis-[0-9].[0-9]$'
      - run:
          name: Install Other System Dependencies
          command: apt-get install -y build-essential git sudo unzip vim zip
      - run:
          name: Restart PostgreSQL
          command: service postgresql restart
      - run:
          name: Create Postgresql USER
          command: |
              sudo -u postgres psql -c "CREATE ROLE $(whoami) CREATEDB LOGIN SUPERUSER"
              sudo -u postgres psql -c "CREATE DATABASE conformer;"
              sudo -u postgres psql -c "ALTER DATABASE conformer OWNER TO $(whoami);"
      - run:
          name: Install PostGIS Extensions
          command: psql -c "CREATE EXTENSION postgis; CREATE EXTENSION postgis_topology; CREATE EXTENSION unaccent;" conformer;
      - run:
          name: Download unum
          command: cd /tmp && wget https://s3.amazonaws.com/firstdraftgis/unum.tsv.zip
      - run:
          name: Unzip Unum
          command: cd /tmp && unzip unum.tsv.zip
      - run:
          name: conform unum to place model
          command: python3 conform.py
          no_output_timeout: 5h
      - run:
          name: Create Conformer Database 
          command: psql -f migrate.sql conformer;
      - run:
          name: Clean by Testing DB Loading
          command: python3 clean_load.py
          no_output_timeout: 1h
      - run:
          name: Create Normalize Name
          command: psql -c "UPDATE appfd_place SET name_normalized = unaccent(lower(name_ascii))" conformer
          no_output_timeout: 1h
      - run: 
          name: Delete Old TSV without Normalized Name
          command: rm /tmp/conformed.tsv
      - run:
          name: Re-Export Conformed With Normalized Name
          command: psql -c "COPY appfd_place TO /tmp/conformed.tsv DELIMITER E'\t' CSV HEADER" conformer
      - run:
          name: Sample
          command: head -1 /tmp/conformed.tsv > /tmp/conformed_sample.tsv && time shuf -n 10000 /tmp/conformed.tsv >> /tmp/conformed_sample.tsv
      - run:
          name: Install Pandas
          command: pip install pandas --upgrade          
      - run:
          name: run tests
          command: python3 test.py
      - run:
          name: Install AWS CLI
          command: pip install awscli --upgrade
      - run:
          name: Zip Results
          command: cd /tmp && zip -r conformed.tsv.zip conformed.tsv
          no_output_timeout: 1h                
      - run:
          name: Upload to S3
          command: aws s3 cp /tmp/conformed.tsv.zip s3://firstdraftgis/conformed.tsv.zip
